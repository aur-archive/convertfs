--- contrib/convertfs.old	2005-01-13 14:27:35.000000000 +0200
+++ contrib/convertfs	2009-09-03 19:33:35.065808508 +0300
@@ -39,8 +39,8 @@
 
 minix_convert() {
 if [ "$1" = "minix" ]; then
-  hd_dev=`echo $2 | cut -b 1-8`
-  blocks=`fdisk -l $hd_dev | grep $2 | tr -d + | tr -s " " | cut -d ' ' -f 4`
+  hd_dev=`echo "$2" | cut -b 1-8`
+  blocks=`fdisk -l "$hd_dev" | grep "$2" | tr -d + | tr -s " " | cut -d ' ' -f 4`
   if [ "$blocks" -gt "2048287" ]; then
     echo "The \`minix' partition on \`$2' is more than 2GB."
     echo "It's probably to big to convert."
@@ -76,7 +76,7 @@
   exit 1
 fi
 
-if ! type $3 1>/dev/null 2>/dev/null; then
+if ! type "$3" 1>/dev/null 2>/dev/null; then
   echo "Can't find \`$3' on the system."
   exit 1
 fi
@@ -103,36 +103,36 @@
 
 mk_fs() {
 if [ "$1" = "ext2" ]; then
-  mke2fs $2
+  mke2fs "$2"
 elif [ "$1" = "ext3" ]; then
-  mke2fs -j $2
+  mke2fs -j "$2"
 elif [ "$1" = "reiserfs" ]; then
-  echo -e "y\ny" | mkreiserfs $reiserfs_version $2
+  echo -e "y\ny" | mkreiserfs $reiserfs_version "$2"
 elif [ "$1" = "jfs" ]; then
-  mkfs.jfs -f $2
+  mkfs.jfs -f "$2"
 elif [ "$1" = "xfs" ]; then
-  mkfs.xfs -f $2
+  mkfs.xfs -f "$2"
 elif [ "$1" = "minix" ]; then
-  hd_dev=`echo $dev | cut -b 1-8`
-  blocks=`fdisk -l $hd_dev | grep $dev | tr -d + | tr -s " " | cut -d ' ' -f 4`
-  mkfs.minix -v $2 $blocks
+  hd_dev=`echo "$dev" | cut -b 1-8`
+  blocks=`fdisk -l "$hd_dev" | grep "$dev" | tr -d + | tr -s " " | cut -d ' ' -f 4`
+  mkfs.minix -v "$2" "$blocks"
 fi
 }
 
 error() {
-  umount $loopdev 2>/dev/null
-  losetup -d $loopdev 2>/dev/null
-  umount $dev 2>/dev/null
-  rm -rf $tmp
+  umount "$loopdev" 2>/dev/null
+  losetup -d "$loopdev" 2>/dev/null
+  umount "$dev" 2>/dev/null
+  rm -rf "$tmp"
   exit 1
 }
 
 # device to convert
-dev=$1
+dev="$1"
 # filesystem to convert from
-from_fs_type=$2
+from_fs_type="$2"
 # filesystem to convert to
-to_fs_type=$3
+to_fs_type="$3"
 
 if [ "$dev" = "" ]; then
   usage
@@ -144,24 +144,24 @@
 if [ "$from_fs_type" = "" -o "$to_fs_type" = "" ]; then
   usage
 else
-  ext2_convert $from_fs_type $to_fs_type $dev
-  minix_convert $from_fs_type $dev
-  fs_types $from_fs_type
-  fs_types $to_fs_type
+  ext2_convert "$from_fs_type" "$to_fs_type" "$dev"
+  minix_convert "$from_fs_type" "$dev"
+  fs_types "$from_fs_type"
+  fs_types "$to_fs_type"
 fi
 
 if [ "$to_fs_type" = "ext2" ]; then
-  find_mkfs $from_fs_type $to_fs_type mke2fs
+  find_mkfs "$from_fs_type" "$to_fs_type" mke2fs
 elif [ "$to_fs_type" = "ext3" ]; then
-  find_mkfs $from_fs_type $to_fs_type mke2fs
+  find_mkfs "$from_fs_type" "$to_fs_type" mke2fs
 elif [ "$to_fs_type" = "reiserfs" ]; then
-  find_mkfs $from_fs_type $to_fs_type mkreiserfs
+  find_mkfs "$from_fs_type" "$to_fs_type" mkreiserfs
 elif [ "$to_fs_type" = "jfs" ]; then
-  find_mkfs $from_fs_type $to_fs_type mkfs.jfs
+  find_mkfs "$from_fs_type" "$to_fs_type" mkfs.jfs
 elif [ "$to_fs_type" = "xfs" ]; then
-  find_mkfs $from_fs_type $to_fs_type mkfs.xfs
+  find_mkfs "$from_fs_type" "$to_fs_type" mkfs.xfs
 elif [ "$to_fs_type" = "minix" ]; then
-  find_mkfs $from_fs_type $to_fs_type mkfs.minix
+  find_mkfs "$from_fs_type" "$to_fs_type" mkfs.minix
 fi
   
 if ! grep -q "loop" /proc/devices; then
@@ -177,33 +177,33 @@
 loopdev=/dev/loop7
 
 tmp=/tmp/convertfs
-fs1root=$tmp/fs1root
-fs2root=$tmp/fs2root
+fs1root="$tmp/fs1root"
+fs2root="$tmp/fs2root"
 
 fsimage_name=fsimage
 fsindex_name=fsindex
 fssuper_name=fssuper
-fsimage=$fs1root/$fsimage_name
-fsindex=$fs1root/$fsindex_name
-fssuper=$tmp/$fssuper_name
+fsimage="$fs1root/$fsimage_name"
+fsindex="$fs1root/$fsindex_name"
+fssuper="$tmp/$fssuper_name"
 
-mkdir -p $fs1root || exit
-mkdir -p $fs2root || exit
+mkdir -p "$fs1root" || exit
+mkdir -p "$fs2root" || exit
 
 echo "== Creating clone of \`$from_fs_type' filesystem that's on \`$dev'. =="
-umount $dev 2>/dev/null
-mount -t $from_fs_type $dev $fs1root || error
-./devclone $dev $fsimage || error
+umount "$dev" 2>/dev/null
+mount -t "$from_fs_type" "$dev" "$fs1root" || error
+devclone "$dev" "$fsimage" || error
 
 echo "===== Creating destination \`$to_fs_type' filesystem. ====="
-umount $loopdev 2>/dev/null
-losetup -d $loopdev 2>/dev/null
-losetup $loopdev $fsimage || error
-mk_fs $to_fs_type $loopdev || error
+umount "$loopdev" 2>/dev/null
+losetup -d "$loopdev" 2>/dev/null
+losetup "$loopdev" "$fsimage" || error
+mk_fs "$to_fs_type" "$loopdev" || error
 
 echo "============== Copying files =============="
-mount -t $to_fs_type $loopdev $fs2root || error
-ls -1A $fs1root | while read file; do
+mount -t "$to_fs_type" "$loopdev" "$fs2root" || error
+ls -1A "$fs1root" | while read file; do
 	if [ "x$file" != "x$fsimage_name" ] &&
 	   [ "x$file" != "x$fsindex_name" ] &&
 	   [ "x$file" != "xlost+found" ] &&
@@ -211,22 +211,22 @@
 		mv -f "$fs1root/$file" "$fs2root/" || error
 	fi
 done
-ls -lA $fs2root
-df -h $fs2root
-umount $loopdev || error
-losetup -d $loopdev 2>/dev/null
+ls -lA "$fs2root"
+df -h "$fs2root"
+umount "$loopdev" || error
+losetup -d "$loopdev" 2>/dev/null
 
 echo "=== Preparing info for block relocation ==="
-./prepindex $fsimage $fsindex $fssuper || error
-umount $dev || error
-dd if=$fssuper of=$dev || exit
+prepindex "$fsimage" "$fsindex" "$fssuper" || error
+umount "$dev" || error
+dd if="$fssuper" of="$dev" || exit
 sync
 
 echo "============ Relocating blocks ============"
-./devremap $dev || exit
+devremap "$dev" || exit
 
 echo "=== Filesystem conversion accomplished! ==="
-rm -rf $tmp
+rm -rf "$tmp"
 echo "NOTE: If you want to boot the new filesystem on \`$dev' you"
 echo "      should edit \`/etc/fstab' and add something like this."
 echo "      $dev   /   $to_fs_type   defaults   1   1"
